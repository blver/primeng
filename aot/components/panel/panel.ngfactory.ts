/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../components/panel/panel';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/render/api';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/element';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/linker/view_type';
import * as import11 from '@angular/core/src/change_detection/change_detection';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/core/src/metadata/view';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/animation/animation_style_util';
import * as import16 from '@angular/core/src/animation/animation_sequence_player';
import * as import17 from '@angular/core/src/animation/animation_styles';
import * as import18 from '@angular/core/src/animation/animation_keyframe';
import * as import19 from '@angular/core/src/animation/animation_player';
import * as import20 from '@angular/common/src/directives/ng_class';
import * as import21 from '@angular/common/src/directives/ng_style';
import * as import22 from '@angular/common/src/directives/ng_if';
import * as import23 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import24 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import25 from '@angular/core/src/linker/template_ref';
class PanelModuleInjector extends import0.NgModuleInjector<import1.PanelModule> {
  _CommonModule_0:import2.CommonModule;
  _PanelModule_1:import1.PanelModule;
  __LOCALE_ID_2:any;
  __NgLocalization_3:import3.NgLocaleLocalization;
  __TRANSLATIONS_FORMAT_4:any;
  constructor(parent:import4.Injector) {
    super(parent,[],[]);
  }
  get _LOCALE_ID_2():any {
    if ((this.__LOCALE_ID_2 == (null as any))) { (this.__LOCALE_ID_2 = (null as any)); }
    return this.__LOCALE_ID_2;
  }
  get _NgLocalization_3():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == (null as any))) { (this.__NgLocalization_3 = new import3.NgLocaleLocalization(this._LOCALE_ID_2)); }
    return this.__NgLocalization_3;
  }
  get _TRANSLATIONS_FORMAT_4():any {
    if ((this.__TRANSLATIONS_FORMAT_4 == (null as any))) { (this.__TRANSLATIONS_FORMAT_4 = (null as any)); }
    return this.__TRANSLATIONS_FORMAT_4;
  }
  createInternal():import1.PanelModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._PanelModule_1 = new import1.PanelModule();
    return this._PanelModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.PanelModule)) { return this._PanelModule_1; }
    if ((token === import5.LOCALE_ID)) { return this._LOCALE_ID_2; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_3; }
    if ((token === import5.TRANSLATIONS_FORMAT)) { return this._TRANSLATIONS_FORMAT_4; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const PanelModuleNgFactory:import0.NgModuleFactory<import1.PanelModule> = new import0.NgModuleFactory(PanelModuleInjector,import1.PanelModule);
var renderType_Panel_Host:import6.RenderComponentType = (null as any);
class _View_Panel_Host0 extends import7.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import8.AppElement;
  _Panel_0_4:import1.Panel;
  constructor(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_Panel_Host0,renderType_Panel_Host,import10.ViewType.HOST,viewUtils,parentInjector,declarationEl,import11.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    this._el_0 = this.selectOrCreateHostElement('p-panel',rootSelector,(null as any));
    this._appEl_0 = new import8.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_Panel0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Panel_0_4 = new import1.Panel(new import12.ElementRef(this._el_0));
    this._appEl_0.initComponent(this._Panel_0_4,[],compView_0);
    compView_0.create(this._Panel_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.Panel) && (0 === requestNodeIndex))) { return this._Panel_0_4; }
    return notFoundResult;
  }
}
function viewFactory_Panel_Host0(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<any> {
  if ((renderType_Panel_Host === (null as any))) { (renderType_Panel_Host = viewUtils.createRenderComponentType('',0,import13.ViewEncapsulation.None,[],{})); }
  return new _View_Panel_Host0(viewUtils,parentInjector,declarationEl);
}
export const PanelNgFactory:import14.ComponentFactory<import1.Panel> = new import14.ComponentFactory<import1.Panel>('p-panel',viewFactory_Panel_Host0,import1.Panel);
const styles_Panel:any[] = [];
var Panel_panelContent_states:any = {
  hidden: {height: '0px'},
  visible: {height: '*'},
  '*': {}
}
;
function Panel_panelContent_factory(view:import7.AppView<any>,element:any,currentState:any,nextState:any):void {
  view.cancelActiveAnimation(element,'panelContent',(nextState == 'void'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = Panel_panelContent_states['*'];
  var startStateStyles:any = Panel_panelContent_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = Panel_panelContent_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  import15.renderStyles(element,view.renderer,import15.clearStyles(startStateStyles));
  if (((player == (null as any)) && ((currentState == 'visible') && (nextState == 'hidden')))) {
      player = new import16.AnimationSequencePlayer([view.renderer.animate(element,new import17.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[startStateStyles])),import15.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import18.AnimationKeyframe(0,new import17.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}]))),
        new import18.AnimationKeyframe(1,new import17.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),400,0,'cubic-bezier(0.86, 0, 0.07, 1)')]);
    totalTime = 400;
  }
  if (((player == (null as any)) && ((currentState == 'hidden') && (nextState == 'visible')))) {
      player = new import16.AnimationSequencePlayer([view.renderer.animate(element,new import17.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[startStateStyles])),import15.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import18.AnimationKeyframe(0,new import17.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}]))),
        new import18.AnimationKeyframe(1,new import17.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),400,0,'cubic-bezier(0.86, 0, 0.07, 1)')]);
    totalTime = 400;
  }
  if ((player == (null as any))) { (player = new import19.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    import15.renderStyles(element,view.renderer,import15.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  view.queueAnimation(element,'panelContent',player,totalTime,currentState,nextState);
}
var renderType_Panel:import6.RenderComponentType = (null as any);
class _View_Panel0 extends import7.AppView<import1.Panel> {
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import20.NgClass;
  _NgStyle_1_4:import21.NgStyle;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _appEl_5:import8.AppElement;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import22.NgIf;
  _text_6:any;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _appEl_8:import8.AppElement;
  _TemplateRef_8_5:any;
  _NgIf_8_6:import22.NgIf;
  _text_9:any;
  _text_10:any;
  _el_11:any;
  _NgClass_11_3:import20.NgClass;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  _map_0:any;
  /*private*/ _expr_7:any;
  constructor(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_Panel0,renderType_Panel,import10.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import11.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this._NgClass_1_3 = new import20.NgClass(this.parentInjector.get(import23.IterableDiffers),this.parentInjector.get(import24.KeyValueDiffers),new import12.ElementRef(this._el_1),this.renderer);
    this._NgStyle_1_4 = new import21.NgStyle(this.parentInjector.get(import24.KeyValueDiffers),new import12.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = this.renderer.createElement(this._el_1,'div',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all');
    this._text_4 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_3,(null as any));
    this._appEl_5 = new import8.AppElement(5,3,this,this._anchor_5);
    this._TemplateRef_5_5 = new import25.TemplateRef_(this._appEl_5,viewFactory_Panel1);
    this._NgIf_5_6 = new import22.NgIf(this._appEl_5.vcRef,this._TemplateRef_5_5);
    this._text_6 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this.renderer.projectNodes(this._el_3,import9.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_7 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_3,(null as any));
    this._appEl_8 = new import8.AppElement(8,3,this,this._anchor_8);
    this._TemplateRef_8_5 = new import25.TemplateRef_(this._appEl_8,viewFactory_Panel2);
    this._NgIf_8_6 = new import22.NgIf(this._appEl_8.vcRef,this._TemplateRef_8_5);
    this._text_9 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._text_10 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_11 = this.renderer.createElement(this._el_1,'div',(null as any));
    this.renderer.setElementAttribute(this._el_11,'class','ui-panel-content-wrapper');
    this._NgClass_11_3 = new import20.NgClass(this.parentInjector.get(import23.IterableDiffers),this.parentInjector.get(import24.KeyValueDiffers),new import12.ElementRef(this._el_11),this.renderer);
    this._text_12 = this.renderer.createText(this._el_11,'\n                ',(null as any));
    this._el_13 = this.renderer.createElement(this._el_11,'div',(null as any));
    this.renderer.setElementAttribute(this._el_13,'class','ui-panel-content ui-widget-content');
    this._text_14 = this.renderer.createText(this._el_13,'\n                    ',(null as any));
    this.renderer.projectNodes(this._el_13,import9.flattenNestedViewRenderNodes(this.projectableNodes[1]));
    this._text_15 = this.renderer.createText(this._el_13,'\n                ',(null as any));
    this._text_16 = this.renderer.createText(this._el_11,'\n            ',(null as any));
    this._text_17 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_18 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._expr_0 = import11.UNINITIALIZED;
    this._expr_1 = import11.UNINITIALIZED;
    this._expr_2 = import11.UNINITIALIZED;
    this._expr_3 = import11.UNINITIALIZED;
    this._expr_4 = import11.UNINITIALIZED;
    this._expr_5 = import11.UNINITIALIZED;
    this._expr_6 = import11.UNINITIALIZED;
    this._map_0 = import9.pureProxy1((p0:any):{[key: string]:any} => {
      return {'ui-panel-content-wrapper-overflown': p0};
    });
    this._expr_7 = import11.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import25.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import22.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6; }
    if (((token === import25.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import22.NgIf) && (8 === requestNodeIndex))) { return this._NgIf_8_6; }
    if (((token === import20.NgClass) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 16)))) { return this._NgClass_11_3; }
    if (((token === import20.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._NgClass_1_3; }
    if (((token === import21.NgStyle) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._NgStyle_1_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_5:any = (this.context.collapsed? 'hidden': 'visible');
    if (import9.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      var oldRenderVar:any = this._expr_5;
      if ((oldRenderVar == import11.UNINITIALIZED)) { (oldRenderVar = 'void'); }
      var newRenderVar:any = currVal_5;
      if ((newRenderVar == import11.UNINITIALIZED)) { (newRenderVar = 'void'); }
      this.componentType.animations['panelContent'](this,this._el_11,oldRenderVar,newRenderVar);
      this._expr_5 = currVal_5;
    }
    const currVal_0:any = this.context.styleClass;
    if (import9.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgClass_1_3.klass = currVal_0;
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = 'ui-panel ui-widget ui-widget-content ui-corner-all';
    if (import9.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgClass_1_3.ngClass = currVal_1;
      this._expr_1 = currVal_1;
    }
    if (!throwOnChange) { this._NgClass_1_3.ngDoCheck(); }
    const currVal_2:any = this.context.style;
    if (import9.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._NgStyle_1_4.ngStyle = currVal_2;
      this._expr_2 = currVal_2;
    }
    if (!throwOnChange) { this._NgStyle_1_4.ngDoCheck(); }
    const currVal_3:any = this.context.header;
    if (import9.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgIf_5_6.ngIf = currVal_3;
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.context.toggleable;
    if (import9.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._NgIf_8_6.ngIf = currVal_4;
      this._expr_4 = currVal_4;
    }
    const currVal_6:any = 'ui-panel-content-wrapper';
    if (import9.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this._NgClass_11_3.klass = currVal_6;
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this._map_0((this.context.collapsed || this.context.animating));
    if (import9.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this._NgClass_11_3.ngClass = currVal_7;
      this._expr_7 = currVal_7;
    }
    if (!throwOnChange) { this._NgClass_11_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  detachInternal():void {
    this.componentType.animations['panelContent'](this,this._el_11,this._expr_5,'void');
  }
}
export function viewFactory_Panel0(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<import1.Panel> {
  if ((renderType_Panel === (null as any))) { (renderType_Panel = viewUtils.createRenderComponentType('c:/Users/eirwn/Documents/primeng-min/components/panel/panel.ts class Panel - inline template',2,import13.ViewEncapsulation.None,styles_Panel,{panelContent: Panel_panelContent_factory})); }
  return new _View_Panel0(viewUtils,parentInjector,declarationEl);
}
class _View_Panel1 extends import7.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_Panel1,renderType_Panel,import10.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import11.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'span',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','ui-panel-title');
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._expr_0 = import11.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import9.interpolate(1,'',this.parent.context.header,'');
    if (import9.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setText(this._text_1,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_Panel1(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<any> {
  return new _View_Panel1(viewUtils,parentInjector,declarationEl);
}
class _View_Panel2 extends import7.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import20.NgClass;
  _text_1:any;
  _el_2:any;
  _NgClass_2_3:import20.NgClass;
  _text_3:any;
  /*private*/ _expr_3:any;
  _map_0:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  _map_1:any;
  /*private*/ _expr_6:any;
  constructor(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_Panel2,renderType_Panel,import10.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import11.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'a',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default');
    this.renderer.setElementAttribute(this._el_0,'href','#');
    this._NgClass_0_3 = new import20.NgClass(this.parent.parentInjector.get(import23.IterableDiffers),this.parent.parentInjector.get(import24.KeyValueDiffers),new import12.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'span',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','fa fa-fw');
    this._NgClass_2_3 = new import20.NgClass(this.parent.parentInjector.get(import23.IterableDiffers),this.parent.parentInjector.get(import24.KeyValueDiffers),new import12.ElementRef(this._el_2),this.renderer);
    this._text_3 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'mouseenter',this.eventHandler(this._handle_mouseenter_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_0,'mouseleave',this.eventHandler(this._handle_mouseleave_0_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_2.bind(this)));
    this._expr_3 = import11.UNINITIALIZED;
    this._map_0 = import9.pureProxy1((p0:any):{[key: string]:any} => {
      return {'ui-state-hover': p0};
    });
    this._expr_4 = import11.UNINITIALIZED;
    this._expr_5 = import11.UNINITIALIZED;
    this._map_1 = import9.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'fa-minus': p0,
        'fa-plus': p1
      }
      ;
    });
    this._expr_6 = import11.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    ,[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.NgClass) && (2 === requestNodeIndex))) { return this._NgClass_2_3; }
    if (((token === import20.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgClass_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3:any = 'ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default';
    if (import9.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgClass_0_3.klass = currVal_3;
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._map_0(this.parent.context.hoverToggler);
    if (import9.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._NgClass_0_3.ngClass = currVal_4;
      this._expr_4 = currVal_4;
    }
    if (!throwOnChange) { this._NgClass_0_3.ngDoCheck(); }
    const currVal_5:any = 'fa fa-fw';
    if (import9.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this._NgClass_2_3.klass = currVal_5;
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._map_1(!this.parent.context.collapsed,this.parent.context.collapsed);
    if (import9.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this._NgClass_2_3.ngClass = currVal_6;
      this._expr_6 = currVal_6;
    }
    if (!throwOnChange) { this._NgClass_2_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_mouseenter_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.context.hoverToggler = true)) !== false);
    return (true && pd_0);
  }
  private _handle_mouseleave_0_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.context.hoverToggler = false)) !== false);
    return (true && pd_0);
  }
  private _handle_click_0_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.toggle($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_Panel2(viewUtils:import9.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<any> {
  return new _View_Panel2(viewUtils,parentInjector,declarationEl);
}