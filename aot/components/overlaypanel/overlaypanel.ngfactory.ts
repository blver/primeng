/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../components/overlaypanel/overlaypanel';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/render/api';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/element';
import * as import9 from '../../../components/dom/domhandler';
import * as import10 from '@angular/core/src/linker/view_utils';
import * as import11 from '@angular/core/src/linker/view_type';
import * as import12 from '@angular/core/src/change_detection/change_detection';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/core/src/metadata/view';
import * as import15 from '@angular/core/src/linker/component_factory';
import * as import16 from '@angular/common/src/directives/ng_class';
import * as import17 from '@angular/common/src/directives/ng_style';
import * as import18 from '@angular/common/src/directives/ng_if';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import21 from '@angular/core/src/linker/template_ref';
import * as import22 from '@angular/core/src/security';
class OverlayPanelModuleInjector extends import0.NgModuleInjector<import1.OverlayPanelModule> {
  _CommonModule_0:import2.CommonModule;
  _OverlayPanelModule_1:import1.OverlayPanelModule;
  __LOCALE_ID_2:any;
  __NgLocalization_3:import3.NgLocaleLocalization;
  __TRANSLATIONS_FORMAT_4:any;
  constructor(parent:import4.Injector) {
    super(parent,[],[]);
  }
  get _LOCALE_ID_2():any {
    if ((this.__LOCALE_ID_2 == (null as any))) { (this.__LOCALE_ID_2 = (null as any)); }
    return this.__LOCALE_ID_2;
  }
  get _NgLocalization_3():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == (null as any))) { (this.__NgLocalization_3 = new import3.NgLocaleLocalization(this._LOCALE_ID_2)); }
    return this.__NgLocalization_3;
  }
  get _TRANSLATIONS_FORMAT_4():any {
    if ((this.__TRANSLATIONS_FORMAT_4 == (null as any))) { (this.__TRANSLATIONS_FORMAT_4 = (null as any)); }
    return this.__TRANSLATIONS_FORMAT_4;
  }
  createInternal():import1.OverlayPanelModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._OverlayPanelModule_1 = new import1.OverlayPanelModule();
    return this._OverlayPanelModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.OverlayPanelModule)) { return this._OverlayPanelModule_1; }
    if ((token === import5.LOCALE_ID)) { return this._LOCALE_ID_2; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_3; }
    if ((token === import5.TRANSLATIONS_FORMAT)) { return this._TRANSLATIONS_FORMAT_4; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const OverlayPanelModuleNgFactory:import0.NgModuleFactory<import1.OverlayPanelModule> = new import0.NgModuleFactory(OverlayPanelModuleInjector,import1.OverlayPanelModule);
var renderType_OverlayPanel_Host:import6.RenderComponentType = (null as any);
class _View_OverlayPanel_Host0 extends import7.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import8.AppElement;
  _DomHandler_0_4:import9.DomHandler;
  _OverlayPanel_0_5:import1.OverlayPanel;
  constructor(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_OverlayPanel_Host0,renderType_OverlayPanel_Host,import11.ViewType.HOST,viewUtils,parentInjector,declarationEl,import12.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    this._el_0 = this.selectOrCreateHostElement('p-overlayPanel',rootSelector,(null as any));
    this._appEl_0 = new import8.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_OverlayPanel0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DomHandler_0_4 = new import9.DomHandler();
    this._OverlayPanel_0_5 = new import1.OverlayPanel(new import13.ElementRef(this._el_0),this._DomHandler_0_4,this.renderer);
    this._appEl_0.initComponent(this._OverlayPanel_0_5,[],compView_0);
    compView_0.create(this._OverlayPanel_0_5,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_4; }
    if (((token === import1.OverlayPanel) && (0 === requestNodeIndex))) { return this._OverlayPanel_0_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._OverlayPanel_0_5.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._OverlayPanel_0_5.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._OverlayPanel_0_5.ngOnDestroy();
  }
}
function viewFactory_OverlayPanel_Host0(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<any> {
  if ((renderType_OverlayPanel_Host === (null as any))) { (renderType_OverlayPanel_Host = viewUtils.createRenderComponentType('',0,import14.ViewEncapsulation.None,[],{})); }
  return new _View_OverlayPanel_Host0(viewUtils,parentInjector,declarationEl);
}
export const OverlayPanelNgFactory:import15.ComponentFactory<import1.OverlayPanel> = new import15.ComponentFactory<import1.OverlayPanel>('p-overlayPanel',viewFactory_OverlayPanel_Host0,import1.OverlayPanel);
const styles_OverlayPanel:any[] = [];
var renderType_OverlayPanel:import6.RenderComponentType = (null as any);
class _View_OverlayPanel0 extends import7.AppView<import1.OverlayPanel> {
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import16.NgClass;
  _NgStyle_1_4:import17.NgStyle;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  _anchor_7:any;
  /*private*/ _appEl_7:import8.AppElement;
  _TemplateRef_7_5:any;
  _NgIf_7_6:import18.NgIf;
  _text_8:any;
  _text_9:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_OverlayPanel0,renderType_OverlayPanel,import11.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import12.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this._NgClass_1_3 = new import16.NgClass(this.parentInjector.get(import19.IterableDiffers),this.parentInjector.get(import20.KeyValueDiffers),new import13.ElementRef(this._el_1),this.renderer);
    this._NgStyle_1_4 = new import17.NgStyle(this.parentInjector.get(import20.KeyValueDiffers),new import13.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = this.renderer.createElement(this._el_1,'div',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','ui-overlaypanel-content');
    this._text_4 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this.renderer.projectNodes(this._el_3,import10.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_5 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._text_6 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._anchor_7 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_7 = new import8.AppElement(7,1,this,this._anchor_7);
    this._TemplateRef_7_5 = new import21.TemplateRef_(this._appEl_7,viewFactory_OverlayPanel1);
    this._NgIf_7_6 = new import18.NgIf(this._appEl_7.vcRef,this._TemplateRef_7_5);
    this._text_8 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_9 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._expr_1 = import12.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_1,'click',this.eventHandler(this._handle_click_1_0.bind(this)));
    this._expr_2 = import12.UNINITIALIZED;
    this._expr_3 = import12.UNINITIALIZED;
    this._expr_4 = import12.UNINITIALIZED;
    this._expr_5 = import12.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6,
      this._anchor_7,
      this._text_8,
      this._text_9
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_5; }
    if (((token === import18.NgIf) && (7 === requestNodeIndex))) { return this._NgIf_7_6; }
    if (((token === import16.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgClass_1_3; }
    if (((token === import17.NgStyle) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgStyle_1_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = this.context.styleClass;
    if (import10.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._NgClass_1_3.klass = currVal_2;
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = 'ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow';
    if (import10.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgClass_1_3.ngClass = currVal_3;
      this._expr_3 = currVal_3;
    }
    if (!throwOnChange) { this._NgClass_1_3.ngDoCheck(); }
    const currVal_4:any = this.context.style;
    if (import10.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._NgStyle_1_4.ngStyle = currVal_4;
      this._expr_4 = currVal_4;
    }
    if (!throwOnChange) { this._NgStyle_1_4.ngDoCheck(); }
    const currVal_5:any = this.context.showCloseIcon;
    if (import10.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this._NgIf_7_6.ngIf = currVal_5;
      this._expr_5 = currVal_5;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = (this.context.visible? 'block': 'none');
    if (import10.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementStyle(this._el_1,'display',((this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE,currVal_1) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE,currVal_1).toString()));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onPanelClick()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_OverlayPanel0(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<import1.OverlayPanel> {
  if ((renderType_OverlayPanel === (null as any))) { (renderType_OverlayPanel = viewUtils.createRenderComponentType('c:/Users/eirwn/Documents/primeng-min/components/overlaypanel/overlaypanel.ts class OverlayPanel - inline template',1,import14.ViewEncapsulation.None,styles_OverlayPanel,{})); }
  return new _View_OverlayPanel0(viewUtils,parentInjector,declarationEl);
}
class _View_OverlayPanel1 extends import7.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import16.NgClass;
  _el_1:any;
  /*private*/ _expr_3:any;
  _map_0:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_OverlayPanel1,renderType_OverlayPanel,import11.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import12.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'a',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','ui-overlaypanel-close ui-state-default');
    this.renderer.setElementAttribute(this._el_0,'href','#');
    this._NgClass_0_3 = new import16.NgClass(this.parent.parentInjector.get(import19.IterableDiffers),this.parent.parentInjector.get(import20.KeyValueDiffers),new import13.ElementRef(this._el_0),this.renderer);
    this._el_1 = this.renderer.createElement(this._el_0,'span',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','fa fa-fw fa-close');
    var disposable_0:Function = this.renderer.listen(this._el_0,'mouseenter',this.eventHandler(this._handle_mouseenter_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_0,'mouseleave',this.eventHandler(this._handle_mouseleave_0_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_2.bind(this)));
    this._expr_3 = import12.UNINITIALIZED;
    this._map_0 = import10.pureProxy1((p0:any):{[key: string]:any} => {
      return {'ui-state-hover': p0};
    });
    this._expr_4 = import12.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._el_1
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    ,[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgClass_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3:any = 'ui-overlaypanel-close ui-state-default';
    if (import10.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgClass_0_3.klass = currVal_3;
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._map_0(this.parent.context.hoverCloseIcon);
    if (import10.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._NgClass_0_3.ngClass = currVal_4;
      this._expr_4 = currVal_4;
    }
    if (!throwOnChange) { this._NgClass_0_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_mouseenter_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.context.hoverCloseIcon = true)) !== false);
    return (true && pd_0);
  }
  private _handle_mouseleave_0_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.context.hoverCloseIcon = false)) !== false);
    return (true && pd_0);
  }
  private _handle_click_0_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.onCloseClick($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_OverlayPanel1(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<any> {
  return new _View_OverlayPanel1(viewUtils,parentInjector,declarationEl);
}