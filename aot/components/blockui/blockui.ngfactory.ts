/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../components/blockui/blockui';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/render/api';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/element';
import * as import9 from '../../../components/dom/domhandler';
import * as import10 from '@angular/core/src/linker/view_utils';
import * as import11 from '@angular/core/src/linker/view_type';
import * as import12 from '@angular/core/src/change_detection/change_detection';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/core/src/metadata/view';
import * as import15 from '@angular/core/src/linker/component_factory';
import * as import16 from '@angular/common/src/directives/ng_style';
import * as import17 from '@angular/core/src/change_detection/differs/keyvalue_differs';
class BlockUIModuleInjector extends import0.NgModuleInjector<import1.BlockUIModule> {
  _CommonModule_0:import2.CommonModule;
  _BlockUIModule_1:import1.BlockUIModule;
  __LOCALE_ID_2:any;
  __NgLocalization_3:import3.NgLocaleLocalization;
  __TRANSLATIONS_FORMAT_4:any;
  constructor(parent:import4.Injector) {
    super(parent,[],[]);
  }
  get _LOCALE_ID_2():any {
    if ((this.__LOCALE_ID_2 == (null as any))) { (this.__LOCALE_ID_2 = (null as any)); }
    return this.__LOCALE_ID_2;
  }
  get _NgLocalization_3():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == (null as any))) { (this.__NgLocalization_3 = new import3.NgLocaleLocalization(this._LOCALE_ID_2)); }
    return this.__NgLocalization_3;
  }
  get _TRANSLATIONS_FORMAT_4():any {
    if ((this.__TRANSLATIONS_FORMAT_4 == (null as any))) { (this.__TRANSLATIONS_FORMAT_4 = (null as any)); }
    return this.__TRANSLATIONS_FORMAT_4;
  }
  createInternal():import1.BlockUIModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._BlockUIModule_1 = new import1.BlockUIModule();
    return this._BlockUIModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.BlockUIModule)) { return this._BlockUIModule_1; }
    if ((token === import5.LOCALE_ID)) { return this._LOCALE_ID_2; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_3; }
    if ((token === import5.TRANSLATIONS_FORMAT)) { return this._TRANSLATIONS_FORMAT_4; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const BlockUIModuleNgFactory:import0.NgModuleFactory<import1.BlockUIModule> = new import0.NgModuleFactory(BlockUIModuleInjector,import1.BlockUIModule);
var renderType_BlockUI_Host:import6.RenderComponentType = (null as any);
class _View_BlockUI_Host0 extends import7.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import8.AppElement;
  _DomHandler_0_4:import9.DomHandler;
  _BlockUI_0_5:import1.BlockUI;
  constructor(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_BlockUI_Host0,renderType_BlockUI_Host,import11.ViewType.HOST,viewUtils,parentInjector,declarationEl,import12.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    this._el_0 = this.selectOrCreateHostElement('p-blockUI',rootSelector,(null as any));
    this._appEl_0 = new import8.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_BlockUI0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DomHandler_0_4 = new import9.DomHandler();
    this._BlockUI_0_5 = new import1.BlockUI(new import13.ElementRef(this._el_0),this._DomHandler_0_4);
    this._appEl_0.initComponent(this._BlockUI_0_5,[],compView_0);
    compView_0.create(this._BlockUI_0_5,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_4; }
    if (((token === import1.BlockUI) && (0 === requestNodeIndex))) { return this._BlockUI_0_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._BlockUI_0_5.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._BlockUI_0_5.ngOnDestroy();
  }
}
function viewFactory_BlockUI_Host0(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<any> {
  if ((renderType_BlockUI_Host === (null as any))) { (renderType_BlockUI_Host = viewUtils.createRenderComponentType('',0,import14.ViewEncapsulation.None,[],{})); }
  return new _View_BlockUI_Host0(viewUtils,parentInjector,declarationEl);
}
export const BlockUINgFactory:import15.ComponentFactory<import1.BlockUI> = new import15.ComponentFactory<import1.BlockUI>('p-blockUI',viewFactory_BlockUI_Host0,import1.BlockUI);
const styles_BlockUI:any[] = [];
var renderType_BlockUI:import6.RenderComponentType = (null as any);
class _View_BlockUI0 extends import7.AppView<import1.BlockUI> {
  _text_0:any;
  _el_1:any;
  _NgStyle_1_3:import16.NgStyle;
  _text_2:any;
  _map_0:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement) {
    super(_View_BlockUI0,renderType_BlockUI,import11.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import12.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','ui-blockui ui-widget-overlay');
    this._NgStyle_1_3 = new import16.NgStyle(this.parentInjector.get(import17.KeyValueDiffers),new import13.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._map_0 = import10.pureProxy1((p0:any):{[key: string]:any} => {
      return {display: p0};
    });
    this._expr_0 = import12.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.NgStyle) && (1 === requestNodeIndex))) { return this._NgStyle_1_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this._map_0((this.context.blocked? 'block': 'none'));
    if (import10.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgStyle_1_3.ngStyle = currVal_0;
      this._expr_0 = currVal_0;
    }
    if (!throwOnChange) { this._NgStyle_1_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_BlockUI0(viewUtils:import10.ViewUtils,parentInjector:import4.Injector,declarationEl:import8.AppElement):import7.AppView<import1.BlockUI> {
  if ((renderType_BlockUI === (null as any))) { (renderType_BlockUI = viewUtils.createRenderComponentType('c:/Users/eirwn/Documents/primeng-min/components/blockui/blockui.ts class BlockUI - inline template',0,import14.ViewEncapsulation.None,styles_BlockUI,{})); }
  return new _View_BlockUI0(viewUtils,parentInjector,declarationEl);
}